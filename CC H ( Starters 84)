#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> p32;
typedef pair<ll,ll> p64;
typedef pair<double,double> pdd;
typedef vector<ll> v64;
typedef vector<int> v32;
typedef vector<vector<int> > vv32;
typedef vector<vector<ll> > vv64;
typedef vector<vector<p64> > vvp64;
typedef vector<p64> vp64;
typedef vector<p32> vp32;
ll mod = 1000000007;
double eps = 1e-12;
#define fl(i,e) for(ll i = 0; i < e; i++)
#define fl1(i,s,e) for(ll i = s; i < e; i++)
#define rfl(i,s) for(ll i = s; i >= 0; i -- )
#define rfl1(i,s,e) for(ll i = s; i >= e; i -- )
#define ln "\n"
#define dbg(x) cout<<#x<<" = "<<x<<ln
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define INF 2e18
#define fast_cin() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define all(x) (x).begin(), (x).end()
#define sz(x) ((ll)(x).size())
void read(vector<int> &a);
void read(vector<string> &a);
void read(vector<vector<int>> &a);
void read(vector<pair<int, int>> &a);

ll modpow(ll a, ll b, ll m = mod)
{
    a = a & m;
    ll ans = 1;
    while (b)
    {
        if (b & 1)
        {
            ans = (ans * a) % m;
        }
        b = b >> 1;
        a = (a * a) % m;
    }
    return ans;
}
// Inverse Mod (1 / a) % mod
ll modinv(ll a, ll m = mod)
{
    return modpow(a, m - 2);
}
// Modular Arithematic
ll modadd(ll a, ll b, ll m = mod)
{
    a = a % m;
    b = b % m;
    return (((a + b) % m) + m) % m;
}
ll modsub(ll a, ll b, ll m = mod)
{
    a = a % m;
    b = b % m;
    return (((a - b) % m) + m) % m;
}
ll modmul(ll a, ll b, ll m = mod)
{
    a = a % m;
    b = b % m;
    return (((a * b) % m) + m) % m;
}
ll moddiv(ll a, ll b, ll m = mod)
{
    a = a % m;
    b = b % m;
    return (modmul(a, modinv(b, m), m) + m) % m;
}



void solve(){
    //Code
    ll n;
    cin>>n;
    ll ct = __builtin_popcountll(n);
    // ll ans=0;
    // if(ct<=2){
    //     cout<<0<<endl;
    //     return;
    // }
    // ans  = moddiv(fact[ct-1],fact[ct-3]);
    // ans = moddiv(ans,2);
    // ll t = modmul(ans,6);
    // cout<<t<<endl;

    ll ans = 0ll;
    ans = (ans + modpow(3ll , ct)%mod) % mod;
    ans = (ans - (3ll * modpow(2ll , ct)%mod) % mod + mod) % mod;
    ans = (ans + 3ll) % mod;
    cout<<ans<<endl;
}

int main()
{
    fast_cin();
    ll t;
    cin >> t;
    while(t--)
    {
        solve();
    }
    return 0;
}
