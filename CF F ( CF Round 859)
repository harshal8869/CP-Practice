#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef pair<int, int> pi;
typedef vector<pi> vpi;
#define all(x) x.begin(), x.end()
#define _sorted(x) sort(all(x))
#define ll long long int
typedef vector<ll> vl;
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const ll N = 1e6+5;
char s[N];
int prime[10000005];
vector<ll>sqs;
vector<int>primes;
vector<ll>prime_factorisation(ll n){
    vector<ll> mp;
    while(n!=1){
        ll c=0;
        ll y=prime[n];
        while(n%y==0){
            n=n/y;
            c++;
        }
        mp.push_back(y);
    }
    return mp;
}
struct cmp{
	bool operator()(pair<ll,ll> a,pair<ll,ll> b){
		if(a.first<b.first){
			return 1;
		}
		else{
			if(a.first==b.first){
				if(a.second<b.second){
					return 0;
				}
				else{
					return 1;
				}
			}
			return 0;
		}
	}
};

void thrill()
{
       /*
    
      int n;
        cin>>n;
        ll arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];   
           }   
           ll mx=0;
           for(int i=0;i<n-1;i++)
           {
            mx=max(mx,arr[i]*arr[i+1]);   
           }
           cout<<mx<<endl;
           
           int n ,k;
          cin>>n>>k;
          vector<int> arr(n+1);
          for(int i=1; i<=n; i++){
               int x ; cin>>x;
               arr[i]= x;
          }
          ll ans = INT_MIN;
          ll l = max(1 , n- 2*k);
          for(ll i=l; i<=n; i++){
               for(ll j = i+1 ; j<=n; j++){
                    ans  = max (ans , (i*j) - (1LL*k*(arr[i]|arr[j])));
               }
          }    
          cout<<ans<<endl;
          
          ll n;
   cin>>n;
   if(n==1){
     cout<<'a'<<endl;
   }
   else if(n%2==1)
   {
    ll m = n-2;
    m = m / 2;
    string s(m,'a');
    s+="bc";
    string p(m+1,'a');
    s+=p;
    cout<<s<<endl;
 
   }
   else
   {
      ll m = n-1;
    m = m / 2;
    string s(m,'a');
    s+="b";
    string p(m+1,'a');
    s+=p;
    cout<<s<<endl;
   
   }
   
   ll n,m;
   cin>>n>>m;
   ll ans = 0;
		m++;
		for(int i=30;i>=0;i--){
			if(((n>>i)&1)!=0 && ((m>>i)&1)!=0)
			   continue;
			if((m>>i)&1){
				ans+=(1<<i);
 
			}
			if((n ^ ans)>=m)
			  break;
		}
		cout<<ans<<endl;

 int n,k;
    cin>>n>>k;
    vector<pair<int,int> > arr(k);
    unordered_map<int,int> m1;
    int cnt=2*n;
    for(int i=0;i<k;i++){
        cin>>arr[i].first>>arr[i].second;
        m1[arr[i].first]++;
        m1[arr[i].second]++;
        cnt-=2;
    }
    for(int i=1;i<=2*n;i++){
        int az=0;
        if(m1[i]==0){
            int j=i;
            while(cnt/2!=az){
                j++;
                j%=(2*n+1);
                if(j==0){
                    j=1;
                }
                if(m1[j]==0){
                    az++;
                }
            }
            cnt-=2;
            arr.push_back({i,j});
            m1[i]=1;
            m1[j]=1;
        }
    }
    ll ans=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            int cnt=0;
            if(min(arr[i].first,arr[i].second)<arr[j].second&&arr[j].second<max(arr[i].first,arr[i].second)){
                cnt++;
            }
            if(min(arr[i].first,arr[i].second)<arr[j].first&&arr[j].first<max(arr[i].first,arr[i].second)){
                cnt++;
            }
            if(cnt==1){
                ans++;
            }
        }
    }
    cout<<ans/2<<endl;
    
    int n;
	cin>>n;
	vector<pair<ll,ll> > arr(n);
	for(int i=0;i<n;i++){
		cin>>arr[i].first>>arr[i].second;
	}
	ll x=0;
	ll pos=0,p1=0;
	ll ans=0,d;
	for(int i=0;i<n;i++){
		x=arr[i].first+abs(pos-arr[i].second);
		p1=arr[i].second;
		i++;
		while(i<n&&arr[i].first<x){
			d=arr[i].first-arr[i-1].first;
			if(pos>p1){
				if(arr[i-1].second<=pos && arr[i-1].second>=pos-d){
					ans++;
				}
				pos=pos-d;
			}
			else{
				if(arr[i-1].second>=pos&&arr[i-1].second<=pos+d){
					ans++;
				}
				pos=pos+d;
			}
			i++;
		}
		i--;
		if(i<n){
			if(pos>p1){
				if(arr[i].second<=pos&&arr[i].second>=p1){
					ans++;
				}
			}
			else{
				if(arr[i].second>=pos&&arr[i].second<=p1){
					ans++;
				}
			}
		}

		pos=p1;
	}
	cout<<ans<<endl;
	
	int n;
	cin>>n;
	set<int> s;
	int temp;
	for(int i=0;i<n;i++){
		cin>>temp;
		s.insert(temp);
	}
	int maxi = 0;
	int mini = 0;
	int a=0,b=0;
	for(int i=1;i<=2*n;i++){
		if(s.count(i)){
			if(a!=0){
				a--;
			}
			else{
				mini++;
			}
		}
		else{
			a++;
		}
	}
	for(int i=2*n;i>=1;i--){
		if(s.count(i)){
			if(b!=0){
				b--;
			}
			else{
				maxi++;
			}
		}
		else{
			b++;
		}
	}
	maxi = n - maxi;
	int ans = maxi - mini;
	cout<<ans + 1<<endl;
	
	ll n;
	cin>>n;
	ll sum = 0;
    vector<ll>vec(n,0);
    for(int i=0;i<n;i++){
        cin>>vec[i];
        sum+=vec[i];
    }
    ll odd = 0, even = 0;
    for(int i=0;i<n;i++){
        if(i&1){ 
          even+=(vec[i]-1);
        }
        else{
         odd+=(vec[i]-1);
        }
    }
    if(2*odd<=sum){
        for(int i=0;i<n;i++){
            if(i&1){
              cout<<vec[i]<<" ";
            }
            else{
              cout<<1<<" ";
            }
        }
    }
    else{
        for(int i=0;i<n;i++){
            if(i&1){
             cout<<1<<" ";
            }
            else{
             cout<<vec[i]<<" ";
            }
        }
    }
    cout<<endl;
    
   int n,m;
   cin>>n>>m;
   int cnt;
   int ans = INT_MIN;
    for (int i=0;i<n;i++){
            cin>>cnt;
            ans = max(cnt | m , ans);
        }
        cout<<ans<<endl;
        
         ll n;
	cin>>n;
	ll arr[n];
	for(int i=0;i<n;i++){
		cin>>arr[i];
	}
	ll  ans = 0;
	bool flag = 0;
	for(int i=0;i<n;i++){
		if(arr[i]!=0){
			flag = 1;
		}
		else if(flag==1){
		
	flag = 0;
	ans++;
		}
	}
	if(flag==1){
		ans++;
	}
	ll answer = min(ans,2ll);
	cout<<answer<<endl;
	
	ll n,m;
	 cin>>n>>m;
       vector<pair<ll,ll>>first;
       for(int i=0;i<n;i++){
        ll x;
        cin>>x;
        ll temp=x;
        ll cnt=1;
        while(temp!=1&&temp%m==0){
            cnt=cnt*m;
            temp=temp/m;
        }
        if(first.size()>0 && first.back().first==temp){
            first.back().second+=cnt;
        }
        else{
            first.push_back({temp,cnt});
        }
       }
 
       ll k;
       cin>>k;
    
       vector<pair<ll,ll>>sec;
       for(int i=0;i<k;i++){
        ll x;
        cin>>x;
        ll temp=x;
        ll cnt=1;
        while(temp!=1 && temp%m==0){
            cnt=cnt*m;
            temp=temp/m;
        }
        if(sec.size()>0 && sec.back().first==temp){
            sec.back().second+=cnt;
        }
        else{
            sec.push_back({temp,cnt});
        }
       }
       if(first==sec){
        cout<<"yes"<<endl;
       }
       else{
        cout<<"no"<<endl;
       }
       
        int n; 
	cin>>n;
	int arr[n+1];
	for(int i=1;i<n+1;i++){
	 	cin>>arr[i];
	}
		int ans = 0;
	int mxp[n+1];
	int mnp[n+1];
	mxp[n] = n;
	mnp[n] = n;
	for(int i=n-1;i>0;i--){
		mxp[i] = arr[i] > arr[mxp[i+1]] ? i:mxp[i+1];
		mnp[i] = arr[i] < arr[mnp[i+1]] ? i:mnp[i+1];
	}
 

 
	for(int i=1;i<n;){
		if(arr[i+1] > arr[i]){
			int p = i+1;
			if(mnp[i]!=i){
				for(int j=i+1;j<=n && arr[j] > arr[i]; j++) 
					if(arr[j] > arr[p]){
					p=j;
					}
			}
			else{
			p=mxp[i+1];
			}
			i = p;
		}
		else{
			int p = i+1;
			if(mxp[i]!=i){
				for(int j=i+1;j<=n && arr[j] < arr[i];j++){
					if(arr[j] < arr[p]){
					p=j;
					}
				}
			}
			else{
			p=mnp[i+1];
			}
			i=p;
			
			
		}
		ans++;
	}
	cout<<ans<<endl;
	*/
	ll n, m, x1, y1, x2, y2;
	cin >> n >> m >>  x1 >> y1 >> x2 >> y2;
	string d;
	cin >> d;
	ll cnt = 0, trv = 0;
	map<pair<string, pair<ll, ll>>, ll> mp;
	while (mp[ {d, {x1, y1}}] != 2)
	{
		if (x1 == x2 && y1 == y2)
		{
			cout<<cnt<<endl;
			return;
		}
		if (d == "DR")
		{
			x1++;
			y1++;
		}
		if (d == "DL")
		{
			y1--;
			x1++;
		}
		if (d == "UL")
		{
			x1--;
			y1--;
		}
		if (d == "UR")
		{
			x1--;
			y1++;
		}
		bool ok = false;
		if (x1 == 0)
		{
			d[0] = 'D';
			x1 += 2;
			ok = true;
		}
		if (y1 == 0)
		{
			d[1] = 'R';
			y1 += 2;
			ok = true;
		}
		if (x1 == n + 1)
		{
			d[0] = 'U';
			x1 -= 2;
			ok = true;
		}
		if (y1 == m + 1)
		{
			d[1] = 'L';
			y1 -= 2;
			ok = true;
		}
		if (ok)
		  cnt++;
		trv++;
		mp[ {d, {x1, y1}}]++;
	}
	cout<<-1<<endl;

    
}

int main(){
    int tc;
    cin>>tc;
    for(int i=0;i<tc;i++){
        thrill();
    }
    return 0;
}



   
