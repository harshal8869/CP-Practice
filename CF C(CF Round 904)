// Jai Shree Ram
//Jai Hanuman Ji
//Jai Mata Di
//Har Har Mahadev


 
 //  while(placement!=true && harshal!=1)
 // harshal=0;
  // koshish++;
  // if(placement==true)
  //  harshal=1;
  // else 
  // harshal=0;
  
   
   
#include <bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp>
#define ll long long int
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> node;
#define pi pair<ll,ll>
#define vpi vector<pi>
#define pll pair<ll, ll>
#define vp vector<pll>
#define fr for(int i=0;i<n;i++)
#define all(x) (x).begin(), (x).end()
//#define _sorted(x) sort(all(x))
#define ff first
#define vll vector<ll>
#define ss second
#define vl vector<ll>
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const int MOD =1000000007;
//const int N = 2e6+10;
const int N=1000005;
using namespace __gnu_pbds; 
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; 
ll a[N],b[N],sum[N];
int tree[2 * N];
  
// ll a[N],b[N],f[N],v[N];
vector<int>g[N];
 const int NNN = 2e5 + 5;
const int N2 = 5e6 + 10;
ll inf = 1e9;
const ll mxN=1e6+1;
char s[N];
int arr[40];
int pf[N+1];
int prime[10000005];
vector<int> adj[200010];
vector<int> vis(200010);
vector<ll>sqs;
vector<ll> V;
vector<int>primes;
int fact[N],infact[N];
vector< vector< ll > > C;
vector<ll> H;
 
struct cmp{
	bool operator()(pair<int,int> a,pair<int,int> b){
		if((a.second-a.first)>(b.second-b.first)){
			return 0;
		}
		else if((a.second-a.first)==(b.second-b.first)){
			if(a.first<b.first){
				return 0;
			}
			else{
				return 1;
			}
		}
		else{
			return 1;
		}
	}
};
 
 
 
ll lcm(ll a, ll b){
    return (a / __gcd(a, b)) * b;
}

 ll mathpow(ll a,ll b){
     ll x = 1;
     while(b){
         if(b & 1)
             x = x * a;
             x = x % mod;
             a = a * a;
             a = a % mod;
             b >>=1;
         
     }
     return x;
 }


 
ll mod_inv(ll x) {
	return mathpow(x, mod - 2);
}       

ll mod_mult(ll a, ll b) {
    a = a % mod;
    b = b % mod;
    return (((a * b) % mod) + mod) % mod;
}

ll mod_sum(ll a, ll b) {
    a = a % mod;
    b = b % mod;
    return (((a + b) % mod) + mod) % mod;
}

ll mod_div(ll a,ll b) {
	return (a % mod * mod_inv(b)) % mod;
}

vector<ll> factors(ll n){
    vector<ll> ans;
    for (ll i = 2; i * i <= n; i++)
    {
        if (n % i == 0)
        {
            ans.push_back(i);
            if (i * i != n)
            {
                ans.push_back(n / i);
            }
        }
    }
    return ans;
}


int isprime(int n){
   if(n<=1){
		return 0;
	}
	if(n==2){
		return 1;
	}
	if(n%2==0){
		return 0;
	}
	for(int i=3;i<=sqrt(n);i=i+2){
		if(n%i==0){
			return 0;
		}
	}
	return 1;
}
 

 double dhundo(int x,int y,int a,int b){ 
     
     
    double ans = sqrt((x-a)*(x-a) + (y-b)*(y-b)); 
    return ans; 
     
} 

ll log(ll a, ll b){
    return log2(a)/log2(b);
}
// int adp[100001];
ll solve(vector<pair<ll,ll>> vec,ll lf,ll x){
    vector<ll> pref(x+1,0);
 
 
    for(auto i:vec){
        if(lf>=i.first && lf<=i.second){
            continue;
        }
 
        pref[i.first]++;
        pref[i.second+1]--;
    }
 
    ll mx=0;
    
    for(int i=1;i<x;i++){
        pref[i]=pref[i]+pref[i-1];
        mx=max(mx,pref[i]);
    }

    return mx;
}
void thrill(){
 ll n,m;
 cin>>n>>m;
 vector<pair<ll,ll>>vec;
 set<ll>st;
 st.insert(1); st.insert(m);
 ll l,r;
 for(int i=0;i<n;i++){
     cin>>l>>r;
     vec.push_back({l,r});
     st.insert(l);  st.insert(r);
 }
 unordered_map<ll,ll>mp;
 ll x=1;
 for(auto i:st){
     mp[i]=x;
     x++;
 }
 for(int i=0;i<n;i++){
     vec[i].first=mp[vec[i].first];
     vec[i].second=mp[vec[i].second];
 }
 ll ans = solve(vec,1,x);
 ll ans2=solve(vec,x-1,x);
 ans = max(ans,ans2);
 cout<<ans<<endl;
}
int main(){  
       
  int tc;
  cin>>tc;
   for(int i=0;i<tc;i++){
         thrill();
   }
        return 0;
    }
        
    
