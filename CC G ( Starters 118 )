#Jai Shree Ram
#Jai Hanuman Ji
#Jai Mata Di
#Har Har Mahadev
import math
 
MOD = 998244353
 
 
def lcm(a, b):
    return (a // math.gcd(a, b)) * b
 
 
def mathpow(a, b):
    x = 1
    while b > 0:
        if b & 1:
            x = x * a % MOD
        a = a * a % MOD
        b >>= 1
    return x
 
 
def mod_inv(x):
    return mathpow(x, MOD - 2)
 
 
def mod_mult(a, b):
    a %= MOD
    b %= MOD
    return ((a * b) % MOD + MOD) % MOD
 
 
def mod_sum(a, b):
    a %= MOD
    b %= MOD
    return ((a + b) % MOD + MOD) % MOD
 
 
def mod_div(a, b):
    return (a % MOD * mod_inv(b)) % MOD
 
 
def factors(n):
    ans = []
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            ans.append(i)
            if i * i != n:
                ans.append(n // i)
    return ans
 
 
def isprime(n):
    if n <= 1:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        if n % i == 0:
            return False
    return True
 
 
def get_divisors(n):
    divisors = []
    for i in range(1, int(math.sqrt(n)) + 1):
        if n % i == 0:
            divisors.append(i)
            if i != n // i:
                divisors.append(n // i)
    return divisors
for i in range(int(input())):
  MOD=int(1e9+7)
  s=(input())
  n=len(s)
  cnt=0
  cnt2=1
  res=0
  ans=0
  s=s[::-1]
  s="#"+s
  arr=[0]*(n+1)
  brr=[0]*(n+1)
  arr[0]=1
  brr[0]=1
  for i in range(1,n+1):
    brr[i]=2*brr[i-1]
    brr[i]=brr[i]%MOD
    if(s[i]=='a'):
      arr[i]=cnt
      #arr[i]=cnt%MOD
    else:
      cnt=cnt+cnt2
      cnt=cnt%MOD
    cnt2=cnt2+arr[i]
    cnt2=cnt2%MOD
  s+="#"
  for i in range(n+1,0,-1):
    if(s[i]=='a'):
      res=res+1
    ans=ans + arr[i-1]*brr[res]
    ans=ans%MOD
  ans=(ans-1+MOD)%MOD
  print(ans)
