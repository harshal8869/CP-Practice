// Jai Shree Ram
//Jai Hanuman Ji
//Jai Mata Di
//Har Har Mahadev


 //  harshal = 0;
 //  while(placement!=true && harshal!=1)
  // koshish++;
  // if(placement==true)
  //  harshal=1;
  // else 
  // harshal=0;
  
   
   
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
typedef vector<int> vi;
typedef vector<vi> vvi;
#define pi pair<ll,ll>
#define vpi vector<pi>
#define pll pair<ll, ll>
#define vp vector<pll>
#define all(x) (x).begin(), (x).end()
//#define _sorted(x) sort(all(x))
#define ff first
#define vll vector<ll>
#define ss second
#define vl vector<ll>
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const int MOD =1000000007;
//const int N = 2e6+10;
const int N=1000005;
 
ll a[N],b[N],sum[N];
int tree[2 * N];
  
// ll a[N],b[N],f[N],v[N];
vector<int>g[N];
 
const int N2 = 5e6 + 10;
ll inf = 1e9;
char s[N];
int arr[40];
int pf[N+1];
int prime[10000005];
vector<int> adj[200010];
vector<int> vis(200010);
vector<ll>sqs;
vector<ll> V;
vector<int>primes;
int fact[N],infact[N];
vector< vector< ll > > C;
vector<ll> H;
 
struct cmp{
	bool operator()(pair<int,int> a,pair<int,int> b){
		if((a.second-a.first)>(b.second-b.first)){
			return 0;
		}
		else if((a.second-a.first)==(b.second-b.first)){
			if(a.first<b.first){
				return 0;
			}
			else{
				return 1;
			}
		}
		else{
			return 1;
		}
	}
};
 
 
 
 
 
void thrill(){
      ll n; 
      cin>>n;
        ll arr[n];
        ll brr[n];
        for(int i=0;i<n;i++){
         cin>>arr[i];
         brr[i] = arr[i];
        }
        sort(arr,arr+n);
        ll crr[n+1];
        crr[0]=0;
        for(int i=0;i<n;i++){
          crr[i+1] = crr[i] + arr[i];
        }
        for(int i=0;i<n;i++){
          ll idx = lower_bound(arr,arr+n,brr[i]) - arr;
          ll ans = idx * brr[i] - crr[idx];
          ans = ans - brr[i] * n + brr[i] * idx + crr[n] - crr[idx];
          cout<<n + ans<<" ";
        }
        cout<<endl;
}
    int main(){
     int tc;
      cin>>tc;
      for(int i=0;i<tc;i++){
            thrill();
        }
        return 0;
    }
        
    
