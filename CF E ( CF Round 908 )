// Jai Shree Ram
//Jai Hanuman Ji
//Jai Mata Di
//Har Har Mahadev

#include <bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp>
#define ll long long int
#define dl long double
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> node;
#define pi pair<int,int>
#define pl pair<ll,ll>
#define vpi vector<pi>
#define pll pair<ll, ll>
#define vp vector<pll>
#define all(x) (x).begin(), (x).end()
//#define _sorted(x) sort(all(x))
#define ff first
#define vll vector<ll>
#define ss second
//#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x) 
#endif
#define vl vector<ll>
//#define debug(x)
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const int MOD =1000000007;
//const int N = 2e6+10;
const int N=1000005;
using namespace __gnu_pbds; 
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; 
ll a[N],b[N],sum[N];
int tree[2 * N];
  
// ll a[N],b[N],f[N],v[N];
vector<int>g[N];
 const int NNN = 2e5 + 5;
const int N2 = 5e6 + 10;
ll inf = 1e9;
const ll mxN=1e6+1;
char s[N];
int arr[40];
int pf[N+1];
int prime[10000005];
vector<int> adj[200010];
vector<int> vis(200010);
vector<ll>sqs;
vector<ll> V;
vector<int>primes;
int fact[N],infact[N];
vector< vector< ll > > C;
vector<ll> H;
 
struct cmp{
	bool operator()(pair<int,int> a,pair<int,int> b){
		if((a.second-a.first)>(b.second-b.first)){
			return 0;
		}
		else if((a.second-a.first)==(b.second-b.first)){
			if(a.first<b.first){
				return 0;
			}
			else{
				return 1;
			}
		}
		else{
			return 1;
		}
	}
};
 
 
 
ll lcm(ll a, ll b){
    return (a / __gcd(a, b)) * b;
}

 ll mathpow(ll a,ll b){
     ll x = 1;
     while(b){
         if(b & 1)
             x = x * a;
             x = x % mod;
             a = a * a;
             a = a % mod;
             b >>=1;
         
     }
     return x;
 }


 
ll mod_inv(ll x){
	return mathpow(x, mod - 2);
}       

ll mod_mult(ll a, ll b){
    a = a % mod;
    b = b % mod;
    return (((a * b) % mod) + mod) % mod;
}

ll mod_sum(ll a, ll b){
    a = a % mod;
    b = b % mod;
    return (((a + b) % mod) + mod) % mod;
}

ll mod_div(ll a,ll b){
	return (a % mod * mod_inv(b)) % mod;
}
ll fct[N];
void factorial(){
	fct[0] = 1;
	for (int i=1;i<N;i++)
	fct[i] = (fct[i-1] * i)%MOD;
//	fct[i]=fct[i]%MOD;
	
}

ll nCr(ll n, ll r){ 
    return (n < r || r < 0) ? 0 : ((fct[n] * mathpow(fct[r],MOD-2))%MOD * mathpow(fct[n - r], MOD-2))%MOD;
    }
vector<ll> factors(ll n){
    vector<ll> ans;
    for (ll i=2;i * i <= n;i++){
        if (n % i == 0){
            ans.push_back(i);
            if (i * i!=n){
                ans.push_back(n / i);
            }
        }
    }
    return ans;
}


int isprime(int n){
   if(n<=1){
		return 0;
	}
	if(n==2){
		return 1;
	}
	if(n%2==0){
		return 0;
	}
	for(int i=3;i<=sqrt(n);i=i+2){
		if(n%i==0){
			return 0;
		}
	}
	return 1;
}
 

 double dhundo(int x,int y,int a,int b){ 
     double ans = sqrt((x-a)*(x-a) + (y-b)*(y-b)); 
    return ans; 
 } 

ll log(ll a, ll b){
    return log2(a)/log2(b);
}


void thrill(){
       ll n; cin>>n;
    string s;
    ll l = 0;  ll r = 0;
    ll sum=0;
    unordered_map<ll,ll>mp,mp2,mp3;
 
    for(int i=0;i<n;i++){
        ll m,li,ri; cin>>m>>li>>ri;
        vector<ll>a(m);
        for(int i=0;i<m;i++){
            cin>>a[i];
        }
        vector<ll>c(m); 
        for(int i=0;i<m;i++){
            cin>>c[i];
        }
        ll summ = accumulate(all(c), 0LL);
        l = l + li;
        r = r + ri;
        sum = sum + ri;
 
        for(int j=0;j<m;j++){
            ll mx = summ - c[j];
            if(li > mx)
            mp[a[j]] = mp[a[j]] + li - mx;
            mp2[a[j]] = mp2[a[j]] + max(mx, li);
            mp3[a[j]] = mp3[a[j]] + ri;
        }
    }
 
    ll ans = 1e18;
    for(ll i=l;i<r+1;i++){
        if(mp2.find(i) == mp2.end()){
            ans = 0;  break;
        }
 
        if(mp2[i]  - mp3[i] + sum < i) 
            mp[i] = mp[i] - mp2[i] + mp3[i] + i  - sum;
        ans = min(mp[i],ans);
    }
    cout<<ans<<endl;
}
int main(){  
  int tc;
  cin>>tc;
  for(int i=0;i<tc;i++){
         thrill();
          debug();
   }
        return 0;
    }
        
    
