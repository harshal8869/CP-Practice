#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef pair<int, int> pi;
typedef vector<pi> vpi;
#define all(x) x.begin(), x.end()
#define _sorted(x) sort(all(x))
#define ll long long int
typedef vector<ll> vl;
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const ll N = 1e6+5;
char s[N];
int prime[10000005];
vector<ll>sqs;
vector<int>primes;
vector<ll>prime_factorisation(ll n){
    vector<ll> mp;
    while(n!=1){
        ll c=0;
        ll y=prime[n];
        while(n%y==0){
            n=n/y;
            c++;
        }
        mp.push_back(y);
    }
    return mp;
}

void thrill()
{
       /*
    
    ll n;
    cin>>n;
    vector<ll>arr(n),brr(n), ans;
    for (int i=0;i<n;i++){
        cin>>arr[i];
    }
    for (int i=0;i<n;i++){
        cin>>brr[i];
    }
    ll k = 0;
    for (int i=0;i<n;i++)
    {
        while (arr[i] > brr[k]){
            k++;
        }
        cout<<brr[k] - arr[i]<<" ";
    }
    cout<<endl;
    int idx = 0;
    for (int i=0;i<n;i++) {
        idx = max(idx, i);
        while (brr[idx] >= arr[idx + 1] && n > idx + 1) {
            idx++;
        }
 
        cout<<brr[idx] - arr[i]<<" ";
    }
 
    cout<<endl;
    
    ll x,y;
    cin>>x>>y;
    vector<ll>fact=prime_factorisation(y-x);
    ll mn=1e8;
    for(auto i:fact){
        ll xx=((x/i)+(x%i!=0))*i;
        ll yy=((y/i)+(y%i!=0))*i;
        mn=min(mn,min(yy-y,xx-x));
    }
    if(mn==1e8)mn=-1;
    cout<<mn<<endl;
    return;
    
     int n;
     cin>>n;
    vector<int>vec(n);
    for (int i=0;i<n;i++){
        cin>>vec[i];
    }
    vector<int>vec2(n+1);
    vec2[0] = vec[0];
    if(n > 1)
        vec2[1] = vec[0];
    
    for(int i=1;i<n;i++){
        int ans = __gcd(vec[i], vec2[i]);
        ans = vec[i] / ans;
        vec2[i] = vec2[i] * ans;
        vec2[i+1] = vec[i];
    }
 
    vec2[n] = vec[n-1];
    for (int i=0;i<n;i++){
        if(__gcd(vec2[i], vec2[i+1]) != vec[i]){
            cout<<"NO"<<endl;
            return;
        }
    }
 
    cout<<"YES"<<endl;
   
  ll n; cin>>n;
	ll m; cin>>m;
    vl arr(n); 
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
 
	ll ans = INT_MAX;
	vl adj[n];
	for(int i=0;i<m;i++){
		ll x, y; 
		cin>>x>>y;
		x--;
		y--;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	
	if(m%2 == 1){
		for(int i=0;i<n;i++){
			if(adj[i].size()%2 == 1){
				ans = min(ans, arr[i]);
			}
			else{
				for(int j=0;j<adj[i].size();j++){
					if(adj[adj[i][j]].size()%2 == 0 && adj[adj[i][j]].size() != 0){
						ans = min(ans, arr[i]+arr[adj[i][j]]);
					}
				}
			}
		}
		cout<<ans<<endl;
	}
	else{
		cout<<0<<endl;
	}
	
	
	cin>>n>>m>>k;
	for(int i=1;i<k+1;i++){
		cin>>v[i];
	}
	sort(v+1, v+k+1);
	reverse(v+1, v+k+1);
	if(check(n, m) || check(m, n)){
		cout<<"Yes"<<endl;
	} 
	else {
		cout<<"No"<<endl;
	}
	
	   ll a,b,c,d;
    cin>>a>>b>>c>>d;
    ll cnt=0;
    ll ans = 0;
    ll val =1;
    ll x;
    for(int i=0;i<a;i++)
    {
        
        cin>>x;
        if(cnt == 0 || x >= val)
        {
            ans++;
            cnt=b-1;
            val= c + d -2 + x  + 3;
        }
        else{
        cnt--;
        }
        
    }
    cout<<ans<<endl;
 
 ll a,b;
 cin>>a>>b;
   ll x=abs(a);
   ll y=abs(b);
   ll maxi = max(x,y);
    if(x==y){
    cout<<x + y<<endl;
    }
    else{
    cout<< 2 * maxi -1<<endl;
    }
 
 ll a,b,c;
 cin>>a>>b>>c;
 
    for(ll i=1;i<=min(2*a,c);i++){
        ll sum = (i*(i+1))/2;
        if((sum+b)%a == 0){
            cout<<"YES"<<endl;
            return;
        }
    }
 
    cout<<"NO"<<endl;
    
    
    int n,m;
    cin>>n>>m;
    vector<int>arr(m);
    for (int i=0;i<m;i++){
        cin>>arr[i];
    }
    
    vector<int> houses;
    sort(arr.begin(), arr.end());
    houses.push_back(arr[0] - 1 + n - arr[m-1]);
 
    for (int i=1;i<m;i++){
        houses.push_back(arr[i] - arr[i-1] - 1);
    }
       
    
    sort(houses.begin(), houses.end(), greater<>());
    int day = 0;
    int ans = m;
 
    for (int i = 0; i < houses.size(); i++)
    {
        
        if(day*2 >= houses[i]){
            ans += houses[i];
            continue;
        }
 
        houses[i] -= day*2;
        ans += day*2;
 
        if(houses[i] >= 3){
            day += 2;
            ans += 1;
        }
 
        if(houses[i] == 2){
            day++;
            ans +=1;
        }
 
        if(houses[i] == 1)
            day++;
    }
 
    cout<<ans<<endl;
    
    ll n,k;
        cin>>n>>k;
     vector<ll>v(n+1,0);
     vector<ll>v1(n+1,0);
     vector<ll>v2(n+1,0);
     v[0]=1;
     ll sum=0;
     for(ll i=k; ;i++){
        sum+=i;
        if(sum > n){
            break;
        }
        for(ll j=sum;j<n+1;j++){
            v1[j]=(v[j-i] + v1[j-i])%mod;
        }
        v = v1;
        for(int j=0;j<n+1;j++){
            v2[j]=(v1[j] + v2[j])%mod;
            v1[j]=0;
        }
     }
     for(int i=1;i<n+1;i++){
        cout<<v2[i]<<" ";
        
    
}
cout<<endl;

ll n;
	cin>>n;
	vl v(n), b(n);
	for(int i=0;i<n;i++){
		v[i] = i;
	}
	b = v;
	ll indx = n-1;
	while(indx>=0){
		ll curr = v[indx];
		ll num = *lower_bound(all(sqs), v[indx]);
		ll d = num - curr;
		reverse(b.begin()+d, b.begin()+curr+1);
		indx = d-1;
	}
	for(auto it: b){
		cout<<it<<" ";
	}
	cout<<endl;
	
	 int n;
	 cin>>n;
    int maxsq = sqrt(2*n);
    int mini = n;
    vector<int>arr(n);
    int i = n-1;
    set<int>st;
 
    while(maxsq >= 0 && i >= 0){
        int sq = maxsq * maxsq;
        int s = sq - i;
     
        while(st.count(s) == 0 &&  n > s){
            st.insert(s);
            arr[i] = s;
            i--;
            s++;
        }
        
        maxsq--;
    }
    
    for (int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    
   ll ans = 0;
    ll n; 
    cin >> n;
    vi v(n + 1, 0);
    for(int i=1;i<=n;i++){
        cin>>v[i];
    }
    vi vec(n + 1, 0);
    vec[0] = 1;
    for(int i=1;i<=n;i++){
        ll x = v[i];
        if (vec[i - 1] == 1) {
            if (i + x > n) {
 
            } 
            else {
                vec[i + x] = 1;
            }
 
        }
        if (i - 1 - x >= 0 && vec[i - x - 1] == 1) {
            vec[i] = 1;
        }
 
    }
    if (vec[n]) {
        cout<<"YES"<<endl;
    } 
    else {
        cout<<"NO"<<endl;
    }
    
    ll n; cin>>n;
    ll arr[n]; for(int i = 0; i<n; i++){
        cin>>arr[i];
    }
    ll ans = n;
    for(int k = 1; k<=n; k++){
        
        ll ini = 0;
        for(int i = 0; i<k; i++) ini+=arr[i];
        ll b = k;
        ll maxseg = k,sum = 0,s = 0;
        while(b<n){
            sum+=arr[b];
            s++;
            if(sum == ini){
                sum = 0;
                maxseg = max(maxseg,s);
                s = 0;
            }
            else if(sum>ini){
                sum = 0;
                maxseg = n;
                break;
            }
            b++;
        }
        
        if(sum!=0){
            if(sum == ini){
                sum = 0;
                maxseg = max(maxseg,s);
            }
            else{
                maxseg = n;
            }
        }
        ans = min(ans,maxseg);
        
    }
    cout<<ans<<endl;

ll n;
	cin >> n;
	vl a(n);
	bool five = false, zero = false;
	for(int i= 0;i<n;i++)
	{
		cin >> a[i];
		if (a[i] % 10 == 5)five = true;
		if (a[i] % 10 == 0)zero = true;
	}
	if (five == true)
	{
		ll k = a[0];
		if (k % 10 == 5)
		{
			for (auto x : a)
			{
				if (x != k && x != k + 5)
				{
					cout << "No" << endl;
					return;
				}
			}
		}
		else if (k % 10 == 0)
		{
			for (auto x : a)
			{
				if (x != k && x != k - 5)
				{
					cout << "No" << endl;
					return;
				}
			}
		}
		else
		{
			cout << "No" << endl;
			return;
		}
		cout << "Yes" << endl;
		return;
	}
	if (zero == true)
	{
		ll k = a[0];
		for (auto x : a)
		{
			if (x != k)
			{
				cout << "No" << endl;
				return;
			}
		}
		cout << "Yes" << endl;
		return;
	}
	for (int i = 0; i < n; i++)
	{
		while (a[i] % 10 != 2)
		{
			a[i] += (a[i] % 10);
		}
	}
	for (int i = 0; i < n - 1; i++)
	{
		if ((a[i + 1] - a[i]) % 20 != 0)
		{
			cout << "No" << endl;
			return;
		}
	}
	cout << "Yes" << endl;
	
	 ll n;
    cin>>n;
    ll a=0;
    ll b=0;
    ll c=0;
    
    vector<vector<string>>v(3, vector<string>(n));
    map<string, ll>m1;
    map<string, ll>m2;
    map<string, ll>m3;
 
    for (int i=0;i<n;i++){
        cin>>v[0][i];
        m1[v[0][i]]++;
    }
    for (int i=0;i<n;i++){
        cin >> v[1][i];
        m2[v[1][i]]++;
    }
    for (int i=0;i<n;i++){
        cin>>v[2][i];
        m3[v[2][i]]++;
    }
    for (int i=0;i<n;i++){
        if (m2[v[0][i]] && m3[v[0][i]]){
            continue;
        }
        else if (m2[v[0][i]] || m3[v[0][i]]){
            a += 1;
        }
        else{
            a += 3;
        }
    }
    for (int i=0;i<n;i++){
        if (m1[v[1][i]] && m3[v[1][i]]){
            continue;
        }
        else if (m1[v[1][i]] || m3[v[1][i]]){
            b += 1;
        }
        else{
            b += 3;
        }
    }
    for (int i = 0; i < n; i++){
        if (m2[v[2][i]] && m1[v[2][i]]){
            continue;
        }
        else if (m2[v[2][i]] || m1[v[2][i]]){
            c += 1;
        }
        else{
            c += 3;
        }
    }
    cout<<a<< " "<<b<< " "<<c<<" "<<endl;
    
    ll n, q;
	cin>>n>>q;
	vvl vec(1001, vl(1001, 0));
	for(ll i=0;i<n;i++){
		ll h, b;
		cin>>h>>b;
		vec[h][b] += h*b;
	}
	for(ll i=1;i<1001;i++){
		for(ll j=1;j<1001;j++){
			vec[i][j] += vec[i-1][j] + vec[i][j-1] - vec[i-1][j-1];
		}
	}
	while(q--){
		ll h1, w1, h2, w2;
		cin>>h1>>w1>>h2>>w2;
		cout<<vec[h1][w1]-vec[h2-1][w1]-vec[h1][w2-1]+vec[h2-1][w2-1];
		cout<<endl;
	}
	
	 ll n;
    cin>>n;
    ll k=0;
    vector<ll>v1;
    int i=0;
    vector<ll>v2;
    for (i = 0; i < (n + 1) / 2; i++){
        v1.push_back(i);
        k ^= i;
    }
 for (int j = i;j<n-1;j++){
        v2.push_back(j);
        k ^= j;
    }
    if (v1[0] != k){
        v1[0] = pow(2, 18);
    }
    else{
        v1[1] += pow(2, 18);
    }
 
    v2.push_back(k + pow(2, 18));
 
    for (int i = 0; i < n / 2; i++){
        cout<<v1[i]
<<" "  ;
cout<<v2[i]<<" ";
    }
    if (n%2==1)
    {
        cout<<v1[n / 2];
    }
    cout<<endl;
    
    ll n, m;
    cin>>n>>m;
    ll ans1 = 0;
    ll ans2 = 0;
    for(; n--; ){
        cin>>s+1;
        for(int i=1;i<m+1;i++){
            if(s[i] == '1'){
                ans1++;
                ans2++;
            }
        }
        ans2 -= m/4;
 
        for(ll i = 1, t = m/4; i<m && t; i++){
            if(s[i] == '1' && s[i+1] == '1'){
                ans1--;
                t--;
                
 
                i++;
            }
        }
        for(ll i = 1, t = m/4; i<m && t; i++){
            if(!(s[i] == '1' && s[i+1] == '1')){
                ans2++;
                t--;
                i++;
            }
        }
    }
    cout<<ans1<<" "<<ans2<<" "<<endl;
    
      int n;
        cin>>n;
        ll arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];   
           }   
           ll mx=0;
           for(int i=0;i<n-1;i++)
           {
            mx=max(mx,arr[i]*arr[i+1]);   
           }
           cout<<mx<<endl;
           */
           int n ,k;
          cin>>n>>k;
          vector<int> arr(n+1);
          for(int i=1; i<=n; i++){
               int x ; cin>>x;
               arr[i]= x;
          }
          ll ans = INT_MIN;
          ll l = max(1 , n- 2*k);
          for(ll i=l; i<=n; i++){
               for(ll j = i+1 ; j<=n; j++){
                    ans  = max (ans , (i*j) - (1LL*k*(arr[i]|arr[j])));
               }
          }    
          cout<<ans<<endl;

}

int main(){
    int tc;
    cin>>tc;
    for(int i=0;i<tc;i++){
        thrill();
    }
    return 0;
}



   
