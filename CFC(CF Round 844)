#include<bits/stdc++.h>
using namespace std;
#define ll long long int
//
#define all(x) begin(x),end(x)

//#define int int64_t
    
   // ll i=1,j=2;
  /*  ll cnt = 1; 
    ll arr[n];
    for (int i=0;i<n;i++) 
    { 
        cin>>arr[i];
        cnt = cnt * arr[i];
    } 
    cnt = n + cnt -1;
    cout<<2022 * cnt<<endl;
     
   /*  ll n;
     cin>>n; 
     ll mod = 1000000007;

   ll ans = n; 
    ans = (ans*((4*n-1)))%mod;
    ans = (ans* ((n+1)%mod))%mod;
    ans = (ans*166666668)%mod;
    cout<<(2022*ans)%mod<<endl;
    
    
 ll n;
 cin>>n;
 ll res = 0;
 ll arr[mxn];
 ll brr[mxn];
 
 for(int i=1;i<=n;i++){
     arr[i] = arr[i-1] ^ n;
     
 }
 for(int i=0;i<(2<<log2(n));i++){
     brr[i]=0;
     brr[0]=1;
 }
for(int i=1;i<=n;i++){
    for(int j=0;j*j<(2<<log2(n));j++){
        res = res + brr[arr[i]^(j*j)];
        brr[arr[i]]++;
    }
}
ll ans = 1 * n * (n-1)/2-res;
cout<<ans<<endl;

 ll n,m;
 cin>>n>>m;
 vector<int>arr(n);
 priority_queue<int,vector<int>,greater<int>>p;
 for(int i=0;i<n;i++){
     cin>>arr[i];
     p.push(arr[i]);
 }
vector<int>brr(m);
for(int i=0;i<m;i++){
    cin>>brr[i];
    
}
sort(arr.begin(),arr.end());
int j = 0;
ll tot = accumulate(arr.begin(),arr.end(),0ll);
while(m>0){
    tot=tot - p.top();
    p.pop();
    tot+=brr[j];
    p.push(brr[j]);
    j++;
    m--;
}
   
cout<<tot<<endl;
int n,k;
cin>>n>>k;


int n,k;
cin>>n>>k;
for(int i=1;2 * i <n + 1;i++)
cout<<n-i+1<<" "<<i<<" ";
if(n%2==1)
cout<<n/2 + 1;
cout<<endl;
    
    ll n;
    cin>>n;
    bool check = true;
    ll arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    sort(arr,arr+n);
        for (int i=1;i<n; i++) { 
            if (arr[i-1] + 2 > arr[i] ) { 
                check = false; 
                break; 
            } 
        } 
        if(check==0){
            cout<<"NO"<<endl;
        }
        else{
            cout<<"YES"<<endl;
        }
        
        bool tough(ll n,ll k,ll a[]){
            vector<ll> arr(n,0);
            for(ll i=0;i<k;i++){
                arr[a[i]%n]++;
            }
            for(ll i=0;i<n;i++){
                if(arr[i]<=1)
                    return true;
                
            }
            return false;
        }
        void abc(){
            ll k;
            cin>>k;
            bool flag;
            ll arr[k];
            for(ll i=0;i<k;i++){
                cin>>arr[i];
            }
            sort(arr,arr+k);
            for(ll i=1;i<k;i++){
                if(arr[i-1]==arr[i]){
                    cout<<"NO"<<endl;
                   return ;
                }
            }
            for(ll i=2;i<k+1;i++){
                flag = tough(i,k,arr);
                if(flag==0){
                    cout<<"NO"<<endl;
                   return ;
                }
            }
            cout<<"YES"<<endl;
            return ;
            
        
        */
        void abc(){
            /*
        int n;
        cin>>n;
     if(n%2==0){
         cout<<"YES"<<endl;
         for(int i=0;i<n/2;i++){
             cout<<"1 -1";
         }
         cout<<endl;
     }
     else if(n==3){
         cout<<"NO"<<endl;
     }
     else{
         cout<<"YES"<<endl;
         int  cnt = n / 2;
         for(int i=0;i<n/2;i++){
             cout<<1-cnt<<" "<<cnt<<" ";
         }
         cout<<1-cnt<<endl;
     }
        
        ll n,m;
        cin>>n>>m;
        ll cnt = 0;
        ll ans = 0;
      //  vector<ll>arr(n+1);
        
        vector<ll>v;
        ll arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];
        }
        priority_queue<int,vector<int>,greater<int>>p;
        for(int i=m;i<n;i++){
            if(arr[i]<0)
                p.push(arr[i]);
                cnt = cnt + arr[i];
            
            
            while(cnt<0){
                ll high = p.top();
                p.pop();
                high = -1*high ;
                cnt+= (2 * high);
                ans++;
            }
        }
        
         if(arr[m-1]<0 || arr[m-1]==0){
            cnt = arr[m-1];
        }
        else if(m!=1){
            cnt = -1*arr[m-1] ;
            ans++;
        }
        priority_queue<int>p2;
        for(int i=m-2;i>0;i--){
            if(arr[i] > 0)
                p2.push(arr[i]);
                cnt =cnt + arr[i];
            
            
            while(cnt>0){
            int high = p2.top();
            p2.pop();
            high = -1*high;
            cnt+= ( 2 * high);
            ans++;
        }
       
}
cout<<ans<<endl;

 ll n;
 cin>>n;
 ll arr[n];
 for(int i=0;i<n;i++){
     cin>>arr[i];
 }
ll brr[n];
for(int i=0;i<n;i++){
    cin>>brr[i];
}
ll m;
ll crr[m];
for(int i=0;i<m;i++){
    cin>>crr[i];
}




    int k;
    cin>>k;
  
        cout<<k-1<<endl;
        
        ll n,k;
        cin>>n>>k;
        ll ans = 0;
        ll cnt = 1;
 vector<ll>v(n);
 for(int i=0;i<n;i++){
     cin>>v[i];
 }
 for(auto itr:v){
     if(itr==cnt){
         ans++;
         cnt++;
     }
 }
 ll dif = n - ans;
 if(dif%k!=0)
    {
        cout<<dif/k +1<<endl;
    }
    else{
        cout<<dif/k<<endl;
    }
    
    ll n;
    cin>>n;
    ll arr[n];
    vector<ll>v(n+1);
    for(int i=0;i<n;i++){
        cin>>arr[i];
        v[arr[i]]++;
    }
    bool check = true;
    vector<ll>v1;
    vector<ll>v2;
    vector<ll> vec(n+1);
    for(int i=1;i<=n;i++){
        if(v[i]==0){
            v2.push_back(i);
        }
        else if(v[i]==2){
            v1.push_back(i);
        }
        else if(v[i]==1){
            vec[i]=i;
        }
        else{
            check=false;
        }
    }
    if(check!=0){
       
        sort(v2.begin(),v2.end());
         sort(v1.begin(),v1.end());
         ll len = v2.size();
         for(int i=0;i<len;i++){
             if(v2[i]>v1[i]){
                 check=false;
                 
             }
         else{
         vec[v1[i]] = v2[i];
         }
        
    }
    }
    set<int>st;
    if(check!=0){
     //   set<int>st;
        cout<<"YES"<<endl;
        for(int i=0;i<n;i++){
            if(st.count(v[i])!=0){
                cout<<vec[v[i]]<<" ";
            }
            else{
                cout<<v[i]<<" ";
                st.insert(v[i]);
            }
        }
        cout<<endl;
        st.clear();
        for(int i=0;i<n;i++){
            if(st.count(v[i])!=0){
                cout<<v[i]<<" ";
            }
            else{
                cout<<vec[v[i]]<<" ";
                st.insert(v[i]);
            }
        }
        cout<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }
    
      ll n;
      cin>>n;
      ll arr[n];
      for(int i=0;i<n;i++){
          cin>>arr[i];
      }
sort(arr,arr+n);
if(arr[n-1]==arr[0]){
    cout<<"NO"<<endl;
    return;
}
cout<<"YES"<<endl;
for(int i=0;i<n/2;i++){
    cout<<arr[n-1-i]<<" "<<arr[i]<<" ";
}
    if(n%2==1){
    cout<<arr[n/2];
    }
    cout<<endl;
    
    ll n;
    cin>>n;
    vector<int>v(n*n);
      bool check = true;
    ll low = 0;
    ll high = n * n -1;
    if(n==2)
    {
        cout<<1<<" "<<3<<" "<<endl;
        cout<<4<<" "<<2<<" "<<endl;
        return;
    }
    for(int i=0;i<n*n;i++)
    {
        v[i]=i+1;
    }
  
    vector<vector<int>>vec;
    for(int i=0;i<n;i++)
    {
        vector<int>v1;
        for(int j=0;j<n;j++)
        {
           
            if(check==0)
            {
                v1.push_back(v[high--]);
                check = true;
            }
             else
            {
                v1.push_back(v[low++]);
                check = false;
            }
        }
        vec.push_back(v1);
    }
    if(n%2==0)
    {
        for(int i=1;i<=n-1;i+=2)
        {
            reverse(vec[i].begin(),vec[i].end());
        }
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<vec[i][j]<<" ";
        }
        cout<<endl;
    }


   string s;
   cin>>s;
   int m = s.size();
   if(s[m-1]==s[0]){
       cout<<s[0]<<" ";
       for(int i=1;i<=m-2;i++)
       cout<<s[i];
       cout<<" "<<s[m-1];
      // cout<<endl;
   }
   else{
       for(int i=0;i<m;i++){
           for(int j=m-1;j>=i+2;j--){
               string s1 = s.substr(0,i+1);
                string s2 = s.substr(j,(m-j));
               string s3 = s.substr(i+1,(j-i-1));
              
if((s1<=s3 && s2<=s3) || (s3<=s1 && s3<=s2)){
                   cout<<s1<<" "<<s3<<" "<<s2;
                   
                   return;
                 //  cout<<endl;
               }
             //  cout<<endl;
           }
       }
       
       cout<<":(";
       
   }
        
  // cout<<endl;
  
  int n;
  cin>>n;
   vector<int> vec[n];
  map<int,int>mp;
 
  for(int i=0;i<n;i++){
      int m;
      cin>>m;
      for(int j=0;j<m;j++){
          int l;
          cin>>l;
          vec[i].push_back(l);
          mp[l]++;
      }
  }
  bool check = true;
  for(int i=0;i<n;i++){
      bool check = true;
      for(auto&it : vec[i]){
          if(mp[it]<2)
          check = false;
      }
      if(check==1){
          cout<<"YES";
          return;
      }
  }
  cout<<"No";
  
  string s;
  cin>>s;
  bool check = false;
  int m = s.size();
 
 for(int i=1;i<=m-2;i++){

     if(s[i]=='a'){
         for(int j=0;j<=i-1;j++){
             
         cout<<s[j];
         }
         
        cout<<" ";
        cout<<'a'<<" ";
        for(int j=i+1;j<=m-1;j++){
         cout<<s[j];
        }
         cout<<endl;
         check = true;
         return;
     }
 }
 if(check==0){
     cout<<s[0]<<" ";
     for(int i=1;i<=m-2;i++)
     cout<<'b';
     cout<<" "<<s[m-1]<<endl;
 }
  
            */
         /*     int n,m;
              cin>>n>>m;
           if(m > 4 * n)
            cout<<-1<<endl;
        
        
            else if(n > 4 *m)
            cout<<(1LL << (64 -  __builtin_clzll(n)))<<endl;
        
     
        
        else
            cout<<n + abs(m-n)<<endl;
            
            ll a,b,c;
            cin>>a>>b>>c;
            ll x,y,z,w;
            cin>>x>>y>>z>>w;
       //      int ans=abs(a-f); 
        int x2=abs(z-x) + 2 * b - y - w;
        int x1=abs(z-x) + y + w;
        int x4=abs(w-y) + 2 * a - x - z;
        int x3=abs(w-y) + x + z;
        int ans =min( min(x1,x2) , min(x3,x4) );
        cout<<ans + c<<endl;
        
        ll n;
        cin>>n;
        ll res = 0;
        ll arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];
        }
    sort(arr,arr+n);
             map<int,int>mp;
                for(int i=0;i<n;i++){
                mp[arr[i]]++;
                }
        if(mp[0]!=0){
        res=1;
        }
        else{
        res=2;
        }
                
        for(int i=0;i<n-1;i++)
        {
          if(i + 1 > arr[i] && arr[i+1]-2>=i)
          {
              res++;
          }

        }
        cout<<res<<endl;
        
        ll n;
        cin>>n;
        string s;
        cin>>s;
    if(n%2==0){
        for(int i=0;i<n;i++){
            if(i%2==0){
                s[i]='a';
            }
            else{
                s[i]='b';
            }
        }
    }
    else{
        s[n-1]=' ';
        for(int i=0;i<n-1;i++){
            if(i%2==0){
                s[i]='a';
            }
            else{
                s[i]='b';
            }
            
        }
    }
    for(int i=0;i<n;i++){
        cout<<s[i];
    }
    cout<<endl;
    
    ll n;
    cin>>n;
    string s;
    cin>>s;
    vector<pair<int,char>> v(26) ;
    for (int i=0;i<=25;i++) {
        v[i] = {0,char (i + 'a')} ;
    }
    for (auto &itr:s)
        v[itr-'a'].first++ ;
    sort(all(v), greater<>());
    pair<int, int>p1 = {INT_MAX, 69};
    for (int i=1;i<27;i++) {
        if (n % i == 0) {
            int q = n / i;
            int sub = 0; 
            for (int j=0;j<i;j++) {
                sub = sub +  abs(q - v[j].first);
            }
            if ((p1.first > sub ) || (p1.first==sub))
                p1 = {sub, i};
        }
    }
      multiset<char> mch;
    int ans = p1.second;
    int sub=0;
    int q = n / p1.second; 
 for (int i=0;i<26;i++) {
        while (v[i].first - q > 0) {
        mch.insert(v[i].second);
            v[i].first--;
        }
        if ((ans==i)  || (ans<i)){
            while (v[i].first!=0) {
                mch.insert(v[i].second);
                v[i].first--;
            }
        }
    }
    for (int i=0;i<n;i++) {
        if (mch.count(s[i])!=0) {
            mch.erase(mch.find(s[i]));
            for (int j=0;j<26;j++) {
                if (v[j].first < q ){
                    s[i] = v[j].second ;
                    v[j].first++ ;
                    sub++;
                    break;
                }
            }
        }
    }
    cout<<sub<<endl;
    cout<<s<<endl;
}

       
       
   

*/
ll n;
        cin>>n;
        string s;
        int arr[26] = {}; 
      //  string s; 
        for (int i = 0;i<n;i++) { 
            char ch;
            cin>>ch;
            s = s + ch;
            arr[(int)(ch - 'a')]++; 
        } 
        int cnt = -1;
        int mini= INT_MAX; 
     //   int ind = -1; 
        for (int i = 0;i < 26;i++) { 
            int inc = i + 1; 
            if (n % inc != 0)
               continue; 
            int  q= n / inc;
            priority_queue<int> pq; 
            for (int i = 0;i < 26;i++) { 
                pq.push(arr[i]); 
            } 
            int res = 0; 
            while (inc--) { 
                int t1 = pq.top(); 
                pq.pop(); 
                res += max(q - t1,0); 
 
            } 
            if (mini > res) { 
                mini = res;
                cnt = i + 1; 
            } 
        } 
        priority_queue<pair<int, int>>pq; 
        int brr[26] = {}; 
        for (int i = 0;i < 26;i++) { 
            pq.push(make_pair(arr[i], i)); 
            brr[i] = INT_MAX; 
 
        } 
        int q = n / cnt;
        while (cnt--) { 
            int a = pq.top().second; 
            int b = pq.top().first; 
            pq.pop(); 
            brr[a] = b - q; 
        } 
        char c[n]; 
        for (int i = 0;i < n;i++) { 
            int op = (int)(s[i] - 'a'); 
             if (brr[op] > 0) { 
                brr[op]--; 
                for (int l = 0;l <=25;l++) { 
                    if (brr[l] < 0) { 
                        brr[l]++; 
                        c[i] = char(l + (int)('a')); 
                        break; 
                    } 
                } 
            } 
            else if(brr[op]==INT_MAX) { 
                for (int l = 0;l <=25;l++) { 
                    if (brr[l] < 0) { 
                        brr[l]++; 
                        c[i] = char(l + (int)('a')); 
                        break; 
                    } 
                } 
            } 
           
            else{
                c[i] = char(op + (int)('a')); 
            }
        } 
       cout<<mini<<endl;
        for (int i=0;i<n;i++){
            cout<<c[i];
        }
        cout<<endl;
 
 
    } 

    

        

int32_t main(){
	int tc;
	cin>>tc;
	  
	for(int i=0;i<tc;i++){
abc();

    
	}
	  return 0;
}
