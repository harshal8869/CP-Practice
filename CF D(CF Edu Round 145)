#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef pair<int, int> pi;
typedef vector<pi> vpi;
#define all(x) x.begin(), x.end()
#define _sorted(x) sort(all(x))
#define ll long long int
typedef vector<ll> vl;
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const ll N = 1e6+5;
char s[N];
int prime[10000005];
vector<ll>sqs;
vector<int>primes;
vector<ll>prime_factorisation(ll n){
    vector<ll> mp;
    while(n!=1){
        ll c=0;
        ll y=prime[n];
        while(n%y==0){
            n=n/y;
            c++;
        }
        mp.push_back(y);
    }
    return mp;
}
struct cmp{
	bool operator()(pair<ll,ll> a,pair<ll,ll> b){
		if(a.first<b.first){
			return 1;
		}
		else{
			if(a.first==b.first){
				if(a.second<b.second){
					return 0;
				}
				else{
					return 1;
				}
			}
			return 0;
		}
	}
};
bool isSmaller(string str1, string str2)
{
    int n1 = str1.length();
    int n2 = str2.length();
 
    if (n1 < n2)
        return true;
    if (n2 < n1)
        return false;
 
    for (int i = 0; i < n1; i++)
        if (str1[i] < str2[i])
            return true;
        else if (str1[i] > str2[i])
            return false;
 
    return false;
}


string findDiff(string str1, string str2)
{
    
    if (isSmaller(str1, str2))
        swap(str1, str2);
    string str = "";
    int n1 = str1.length();
    int n2 = str2.length();
    reverse(str1.begin(), str1.end());
    reverse(str2.begin(), str2.end());
 
    int carry = 0;
    for (int i = 0; i < n2; i++) {
        
 int sub = ((str1[i] - '0') - (str2[i] - '0') - carry);
 
        if (sub < 0){
            sub = sub + 10;
            carry = 1;
        }
        else
            carry = 0;
 
        str.push_back(sub + '0');
    }
    for (int i = n2; i < n1; i++) {
        int sub = ((str1[i] - '0') - carry);
        if (sub < 0) {
            sub = sub + 10;
            carry = 1;
        }
        else
            carry = 0;
 
        str.push_back(sub + '0');
    }
    reverse(str.begin(), str.end());
 
    return str;
}









void thrill()
{
       /*
    
      int n;
        cin>>n;
        ll arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];   
           }   
           ll mx=0;
           for(int i=0;i<n-1;i++)
           {
            mx=max(mx,arr[i]*arr[i+1]);   
           }
           cout<<mx<<endl;
           
           int n ,k;
          cin>>n>>k;
          vector<int> arr(n+1);
          for(int i=1; i<=n; i++){
               int x ; cin>>x;
               arr[i]= x;
          }
          ll ans = INT_MIN;
          ll l = max(1 , n- 2*k);
          for(ll i=l; i<=n; i++){
               for(ll j = i+1 ; j<=n; j++){
                    ans  = max (ans , (i*j) - (1LL*k*(arr[i]|arr[j])));
               }
          }    
          cout<<ans<<endl;
          
          ll n;
   cin>>n;
   if(n==1){
     cout<<'a'<<endl;
   }
   else if(n%2==1)
   {
    ll m = n-2;
    m = m / 2;
    string s(m,'a');
			d[0] = 'U';
			x1 -= 2;
			ok = true;
		}
		if (y1 == m + 1)
		{
			d[1] = 'L';
			y1 -= 2;
			ok = true;
		}
		if (ok)
		  cnt++;
		trv++;
		mp[ {d, {x1, y1}}]++;
	}
	cout<<-1<<endl;
	
	ll n, m;
    cin>>n>>m;
    ll sum = 0;
    for(int i=1;i<m;i++){
        sum+=i;
    }
    for(int i=m;i<=n*m;i+=m){
        sum+=i;
    }
    cout<<sum<<endl;
    
 
 ll n;
    cin>>n;
    string s;
    cin>>s;
    string temp;
    string ans;
    for(int i=0;i<s.length();i++){
        temp.push_back('1');
        ans.push_back(char(('9'-s[i])+'0'));
    }
    temp.push_back('1');
    if(ans[0]=='0'){
        string ss = findDiff(s,temp);
        ll i=0;
        while(ss[i]=='0'){
            i++;
        }
        for(int j=i;j<ss.size();j++){
            cout<<ss[j];
        }
        cout<<endl;
    }
    else{
        cout<<ans<<endl;
    }
    
        ll n;
       cin>>n;
       ll arr[n];
       for(int i=0;i<n;i++){
        cin>>arr[i];
       }
       ll left = 0;
       ll right = 0;
       ll ans=0;
       for(int i=0;i<n-1;i++){
        int tot = arr[i+1] - arr[i];
        
        if(tot >  0)
        {
            ans+=tot;
            right -=tot;
            
        }
        if(tot < 0)
        {
            
            ans+=abs(tot);
        
        }
        
       }
      
       cout<<ans+abs(arr[n-1]+right)<<endl;
       */
       string s;
    cin>>s;
    int n = s.size();
    if(n==1){
        cout<<0<<endl;
        return;
    }
    ll maxi = 1e12;
    ll zero = 0;
    ll one = 0;
    for(int i=0;i<n;i++){
        if(s[i]=='0'){
            zero++;
        }
        else{
            one++;
        }
    }
    
    ll ans = LLONG_MAX;
    ll prev_one = 0;
    for(int i=0;i<n-1;i++){
        if(s[i] == '0'){
            zero--;
            ll t = prev_one + min(zero, one);
            ans = min(ans, t*maxi+t);   
        }
        else{
            
            ll a = LLONG_MAX;
            ll b = LLONG_MAX;
            if(s[i+1] == '0'){
                a = maxi + min(zero-1, one)*(maxi + 1);
            }
            b = min(zero, one)*(maxi + 1);
            ll t = prev_one*(maxi + 1) + min(a,b);
            ans = min(ans, t);
            one--;
            prev_one++;
        }
        
    }
    cout<<ans<<endl;

   
       
      
}

int main(){
    int tc;
    cin>>tc;
    for(int i=0;i<tc;i++){
        thrill();
    }
    return 0;
}



   
