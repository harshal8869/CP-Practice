// Jai Shree Ram
//Jai Hanuman Ji
//Jai Mata Di
//Har Har Mahadev


 
 //  while(placement!=true && harshal!=1)
 // harshal=0;
  // koshish++;
  // if(placement==true)
  //  harshal=1;
  // else 
  // harshal=0;
  
   
   
#include <bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp>
#define ll long long int
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> node;
#define pi pair<ll,ll>
#define vpi vector<pi>
#define pll pair<ll, ll>
#define vp vector<pll>
#define all(x) (x).begin(), (x).end()
//#define _sorted(x) sort(all(x))
#define ff first
#define vll vector<ll>
#define ss second
#define vl vector<ll>
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const int MOD =1000000007;
//const int N = 2e6+10;
const int N=1000005;
using namespace __gnu_pbds; 
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; 
ll a[N],b[N],sum[N];
int tree[2 * N];
  
// ll a[N],b[N],f[N],v[N];
vector<int>g[N];
 
const int N2 = 5e6 + 10;
ll inf = 1e9;
const ll mxN=1e6+1;
char s[N];
int arr[40];
int pf[N+1];
int prime[10000005];
vector<int> adj[200010];
vector<int> vis(200010);
vector<ll>sqs;
vector<ll> V;
vector<int>primes;
int fact[N],infact[N];
vector< vector< ll > > C;
vector<ll> H;
 
struct cmp{
	bool operator()(pair<int,int> a,pair<int,int> b){
		if((a.second-a.first)>(b.second-b.first)){
			return 0;
		}
		else if((a.second-a.first)==(b.second-b.first)){
			if(a.first<b.first){
				return 0;
			}
			else{
				return 1;
			}
		}
		else{
			return 1;
		}
	}
};
 
 
 


ll small_div(ll n){
    if(n % 2 == 0)
        return 2;
 
    for (ll i = 3;i * i<=n;i=i+2) {
        if (n % i == 0)
            return i;
    }
 
    return n;
}
void init(set<ll>&st){
	st.clear();
	st.insert(0);
}
bool chk(ll m) {
        if(m <= 1)
        return false;
        if (m <= 3) 
        return true; 
        
        int val = sqrt(m);
        if (m % 2 == 0 || m % 3 == 0) 
            return false; 
        

        for (ll i=5;i<=val;i = i + 6) // 6k+1
            if (m % i == 0 || m % (i + 2) == 0) 
                return false; 
        
        return true;
    }
    ll formulae(ll l, ll last){
    return (last * (last + 1)) / 2 - (l * (l - 1)) / 2;
}
int dp[2][111][12321]; 
void thrill(){  
        int n,m;
    	cin>>n>>m;
		vector<int>v(n);
		for(int i=0;i<n;i++){
			cin>>v[i];
		}
		vector<int>vec(n + 1);
		vector<int>ans(n);
		vector<vector<int>>freq(n + 1, vector<int>());
		for (int i=0;i<n;i++) {
			vec[v[i]]++;
			freq[v[i]].push_back(i);
		}
		vector<int>color;
		for(int i=1;i<n+1;i++){
			if(vec[i] >= m){
				for(int j=0;j<m;j++){
					ans[freq[i][j]] = j + 1;
				}
			} 
			else{
				for(int j=0;j<vec[i];j++){
					color.push_back(freq[i][j]);
				}
			}
		}
		int len = color.size();
		for(int i=0;i<len-m+1;i=i+m){
			for(int j=0;j<m;j++){
				ans[color[i + j]] = j + 1;
			}
		}
		for(int i=0;i<n;i++){
			cout<<ans[i]<<" ";
		}
		cout<<endl;
    
}
    int main(){  
    int tc;
      cin>>tc;
   for(int i=0;i<tc;i++){
            thrill();
        }
        return 0;
    }
        
    
