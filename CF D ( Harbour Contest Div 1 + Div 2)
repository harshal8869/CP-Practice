// Jai Shree Ram
//Jai Hanuman Ji
//Jai Mata Di
//Har Har Mahadev


 
 //  while(placement!=true && harshal!=1)
 // harshal=0;
  // koshish++;
  // if(placement==true)
  //  harshal=1;
  // else 
  // harshal=0;
  
   
   
#include <bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp>
#define ll long long int
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> node;
#define pi pair<ll,ll>
#define vpi vector<pi>
#define pll pair<ll, ll>
#define vp vector<pll>
#define all(x) (x).begin(), (x).end()
//#define _sorted(x) sort(all(x))
#define ff first
#define vll vector<ll>
#define ss second
#define vl vector<ll>
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const int MOD =1000000007;
//const int N = 2e6+10;
const int N=1000005;
using namespace __gnu_pbds; 
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; 
ll a[N],b[N],sum[N];
int tree[2 * N];
  
// ll a[N],b[N],f[N],v[N];
vector<int>g[N];
 
const int N2 = 5e6 + 10;
ll inf = 1e9;
const ll mxN=1e6+1;
char s[N];
int arr[40];
int pf[N+1];
int prime[10000005];
vector<int> adj[200010];
vector<int> vis(200010);
vector<ll>sqs;
vector<ll> V;
vector<int>primes;
int fact[N],infact[N];
vector< vector< ll > > C;
vector<ll> H;
 
struct cmp{
	bool operator()(pair<int,int> a,pair<int,int> b){
		if((a.second-a.first)>(b.second-b.first)){
			return 0;
		}
		else if((a.second-a.first)==(b.second-b.first)){
			if(a.first<b.first){
				return 0;
			}
			else{
				return 1;
			}
		}
		else{
			return 1;
		}
	}
};
 
 
 ll formulae(ll l, ll last){
    return (last * (last + 1)) / 2 - (l * (l - 1)) / 2;
}
void init(set<ll>&st){
	st.clear();
	st.insert(0);
}
int dp[2][111][12321]; 
void thrill(){
     int n;
     cin>>n;
     int ans=0;
     string s;
        vector<vector<int>>v1(n + 1, vector<int>(n + 1, 0));
       
        vector<vector<char>>v(n, vector<char>(n));
        for(int i=0;i<n;i++){
            cin>>s;
            for(int j=0;j<n;j++){
                v[i][j] = s[j];
            }
        }
        int xnt=0;
         vector<vector<int>>v2(n + 1, vector<int>(n + 1, 0));
         int res=0;
        vector<vector<int>>v3(n + 1, vector<int>(n + 1, 0));
        for (int i=0;i<n;i++) {
            for (int j=0;j<n;j++){
                if(v3[i][j]!=0) { 
                    int b = min(n, j + 1);
                      v1[i][j] = v1[i][j]- v3[i][j];
                    v3[i + 1][b] = v3[i+1][b] + v3[i][j];
                }
                if(v2[i][j] != 0){
                     int a = max(j - 1, 0);
                    v1[i][j] = v1[i][j] + v2[i][j];
                    v2[i + 1][a] = v2[i+1][a] + v2[i][j];
                }
                
            }
            for (int j=1;j<n;j++) {
                v1[i][j] = v1[i][j] + v1[i][j - 1];
            }
            for (int j=0;j<n;j++) {
                if(v1[i][j] % 2 == 1) {
                    if(v[i][j] == '1') {
                        v[i][j] = '0';
                    } 
                    else{
                        v[i][j] = '1';
                    }
                }
            }
            for (int j=0;j<n;j++) {
                if(v[i][j] == '1') {
                       int a = max(j - 1, 0);
                    int b = min(n, j + 1 + 1);
                    ans = ans + 1;
                    v2[i + 1][a] = v2[i+1][a] + 1;
                    v3[i + 1][b] = v3[i+1][b] + 1;
                }
            }
        }
        cout<<ans<<endl;
}
    int main(){  
    int tc;
      cin>>tc;
   for(int i=0;i<tc;i++){
            thrill();
        }
        return 0;
    }
        
    
