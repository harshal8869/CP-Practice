// Jai Shree Ram
//Jai Hanuman Ji
//Jai Mata Di
//Har Har Mahadev
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
typedef vector<int> vi;
#define pi pair<ll,ll>
#define vpi vector<pi>
#define all(x) x.begin(), x.end()
#define _sorted(x) sort(all(x))
#define ff first
#define vll vector<ll>
#define ss second
#define vl vector<ll>
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const int N = 3e6+10;
ll inf = 1e9;
char s[N];
int arr[40];
int pf[N+1];
int prime[10000005];
vector<int> adj[200010];
vector<int> vis(200010);
vector<ll>sqs;
vector<ll> V;
vector<int>primes;
int fact[N],infact[N];
ll l(ll x){ 
  ll y=0; 
  while(x>0){ 
    ll rem = x%10; 
    if(y<rem)
     y=rem;
    x = x/10; 
  } 
   
  return y; 
} 
ll modInverse(ll a,ll m){ 
    ll m0=m;
    ll y=0,x=1;
    if(m==1) 
        return 0;
    while(a>1){
        ll q=a/m;
        ll t=m;
        m=a%m,a=t; 
        t=y;
        y=x-q*y; 
        x=t; 
    }
    if (x<0) 
        x+=m0;
    return x; 
}
ll fct(ll  n,ll m)
{
  ll ans=1l;
  for(int i=1;i<=n;i++){
  ans=((ans % mod) * i) % mod;
 
  }
  return ans;
}

int search(int x,int y, int n){
  x--;
  y--;
  x = min(x, n-x-1);
  y = min(y, n-y-1);
  int ans = min(x,y);
  return ans;
}
ll func(ll n){
    vector<ll>digits;
    ll bi=0;
    while(n>0){
        digits.push_back(n%9);
        n=n/9;
    }
    ll len=digits.size();
    for(ll i=len-1; i>=0; i--){
        bi=bi*10 + digits[i];
    }
    return bi;
}
bool flagg(ll x, ll y, ll n){
  if(n==1) 
  return true;
  if(min(y, V[n+1] - y + 1) > V[n+1] - V[n])  
  return false;
  y = min(y, V[n+1] - y + 1);
  return flagg(y,x,n-1);
}
 
int dfs(int root){
  int ans = 1 - vis[root];
  vis[root] = 1;
  for(int it : adj[root]){
    if(vis[it] == 0){
      ans = ans +  dfs(it);
      break;
    }
  }
  return ans;
}

ll r(ll x){ 
  ll y=9; 
  while(x>0){ 
    ll rem = x%10; 
    if(y>rem)
    y=rem;
    x = x/10; 
  } 
   
  return y; 
} 
int calcu(int x,int y)
{
    int res=1;
    while(y)
    {
        if(y&1)
        res=res*x%mod;
        x=x*x%mod;
        y=y>>1;
    }
    return res;
}

int C(int x,int y)
{
    return fact[x]*infact[y]%mod*infact[x-y]%mod;
}

vector<ll>prime_factorisation(ll n){
    vector<ll> mp;
    while(n!=1){
        ll c=0;
        ll y=prime[n];
        while(n%y==0){
            n=n/y;
            c++;
        }
        mp.push_back(y);
    }
    return mp;
}
int findres(int x){
    int mini = 10;
    int maxi = -1;
    while(x){
        mini = min(x % 10 ,mini);
        maxi = max(x % 10 , maxi);
        x = x / 10;
    }
    int dif = maxi - mini;
    return dif;
}
ll gcd(ll a, ll b)
{
    if (b == 0)
        return a;
    else
        return gcd(b, a % b);
}
 
ll LCM(ll a, ll b)
{
    return (a * b) / gcd(a, b) ;
}
struct cmp{
	bool operator()(pair<ll,ll> a,pair<ll,ll> b){
		if(a.first<b.first){
			return 1;
		}
		else{
			if(a.first==b.first){
				if(a.second<b.second){
					return 0;
				}
				else{
					return 1;
				}
			}
			return 0;
		}
	}
};
bool isSmaller(string str1, string str2)
{
    int n1 = str1.length();
    int n2 = str2.length();
 
    if (n1 < n2)
        return true;
    if (n2 < n1)
        return false;
 
    for (int i = 0; i < n1; i++)
        if (str1[i] < str2[i])
            return true;
        else if (str1[i] > str2[i])
            return false;
 
    return false;
}


string findDiff(string str1, string str2)
{
    
    if (isSmaller(str1, str2))
        swap(str1, str2);
    string str = "";
    int n1 = str1.length();
    int n2 = str2.length();
    reverse(str1.begin(), str1.end());
    reverse(str2.begin(), str2.end());
 
    int carry = 0;
    for (int i = 0; i < n2; i++){
        
 int sub = ((str1[i] - '0') - (str2[i] - '0') - carry);
 
        if (sub < 0){
            sub = sub + 10;
            carry = 1;
        }
        else
            carry = 0;
 
        str.push_back(sub + '0');
    }
    for (int i = n2; i < n1; i++) {
        int sub = ((str1[i] - '0') - carry);
        if (sub < 0) {
            sub = sub + 10;
            carry = 1;
        }
        else
            carry = 0;
 
        str.push_back(sub + '0');
    }
    reverse(str.begin(), str.end());
 
    return str;
}


void thrill(){
  /*   ll n;
	    cin>>n;
	    if(n%2==0){
	    ll f=fct(n/2,mod);
	   
	    cout<<((f % mod) * (f % mod)) % mod<<endl;
	    }
	    else{
	        cout<<0<<endl;
	    }
	    
	     ll n;
        cin>>n;
        ll arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];
        }
        ll flag1=-1;
        for(int i=0;i<n;i++){
            if(arr[i]==1){
                if(flag1==-1){
                    flag1=i;
                }
                else{
                    flag1=-1;
                    break;
                }
            }
        }
        if(flag1==-1){
            cout<<"NO"<<endl;
        }
        else{
            for(int i=0;i<n;i++){
                if(i==n-1){
                    if(arr[0] - arr[i] > 1){
                        flag1=-1;
                    }
                }
                else{
                    if(arr[i+1] - arr[i] > 1){
                        flag1=-1;
                    }
                }
            }
            if(flag1==-1){
                cout<<"NO"<<endl;
            }
            else{
                cout<<"YES"<<endl;
            }
        }
        
        ll n,l,r;
      cin>>l>>r;
      n=r+1;
      ll arr[n];
      for(int i=0;i<n;i++) {
       cin>>arr[i];
      }
      vector<int> v;
     for(ll j=1<<20;j>0;j=j/2)
    {
        ll one=0;
        ll zero=0;
      for(int i=0;i<n;i++){
      if((arr[i]&j)!= 0){
        one++;
      }
      else{
        zero++;
      }
    } 
    
     if(zero>=one){
     v.push_back(0);
     }
     else{
     v.push_back(1);
     }
      }
      ll ans=0; 
      int x=v.size()-1;
      for(auto &it:v){
        ans+=it*pow(2,x);
        x--;
      }
        cout<<ans<<endl;
        
       ll n;
       cin>>n;
       string s;
       cin>>s;
       ll ans=0;
  for (int i=0;i<n-1;i++){
    if(s[i] == '0' && s[i + 1] == '0'){
      ans = ans + 2;
    }
    else if(s[i] == '0' && s[i + 1] == '1'){
      if (s[i + 2] == '0'){
        ans++;
      }
    }
  }
 
  cout<<ans<<endl;
 
 
 ll n; 
 cin>>n;
        ll arr[n];
        for(ll i=0;i<n;i++) {
            cin>>arr[i];
        }
        
        bool chk = true;
        ll cnt = 2;
        for (ll i=0;i<n;i++) {
            if (arr[i] % cnt== 0) {
                
                chk = false;
                break;
            }
            cnt = LCM(chk, i + 3);
        
        }
 
 
        if(chk){
            cout<<"YES"<<endl;
        } 
        else {
            cout<<"NO"<<endl;
        }
        

  // last tc hahahahahaaha...
  
    ll n;
   cin>>n;
   ll arr[n];
   for(int i=0;i<n;i++){
       cin>>arr[i];
   }
   ll ans=0;
   for(int i=0;i<n;i++){
    ans=max(arr[i]-i-1,ans);
   }
   cout<<ans<<endl;
   
   
         ll n;
    cin>>n;
    ll arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    if(n%2==0){
        cout<<"YES"<<endl;
        return;
    }
    else{
        for(int i=1;i<n;i++){
            if(arr[i] <= arr[i-1]){
                cout<<"YES"<<endl;
                return;
            }
        }
    }
    cout<<"NO"<<endl;
    
     ll x,y;
        
        cin>>x>>y;
        
        
         if(x > y){
        cout<<x+y<<endl;
        }
        else if(y % x == 0){
        cout<<x<<endl;
        }
        else
        {  
            x=(y/x)*x;
            cout<< (x+y) / 2<<endl;
        }
       */
       ll n;
    cin>>n;
    ll arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    bool flag = 1;
   
    for(int i=n-1;i>=0;i--){
         bool fflag = 0;
        for(int j=i+2;j>=2;j--){
            if(arr[i] % j!=0){
                fflag = 1;
                break;
            }
        }
        if(fflag == 0){
            flag=0;
            break;
        }
    }
    if(flag==0){
        cout<<"NO"<<endl;
    }
    else{
        cout<<"YES"<<endl;
    }

  // last tc hahahahahaaha...
    
    

    
}

int main(){
int tc;
   cin>>tc;
 for(int i=0;i<tc;i++){
        thrill();
 }
   return 0;
}



   
