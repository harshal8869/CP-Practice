// Jai Shree Ram
//Jai Hanuman Ji
//Jai Mata Di
//Har Har Mahadev


 
 //  while(placement!=true && harshal!=1)
// harshal=0;
  // koshish++;
  // if(placement==true)
  //  harshal=1;
  // else 
  // harshal=0;
  
   
   
#include <bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp>
#define ll long long int
typedef vector<int> vi;
typedef vector<vi> vvi;
#define pi pair<ll,ll>
#define vpi vector<pi>
#define pll pair<ll, ll>
#define vp vector<pll>
#define all(x) (x).begin(), (x).end()
//#define _sorted(x) sort(all(x))
#define ff first
#define vll vector<ll>
#define ss second
#define vl vector<ll>
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const int MOD =1000000007;
//const int N = 2e6+10;
const int N=1000005;
using namespace __gnu_pbds; 
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; 
ll a[N],b[N],sum[N];
int tree[2 * N];
  
// ll a[N],b[N],f[N],v[N];
vector<int>g[N];
 
const int N2 = 5e6 + 10;
ll inf = 1e9;
char s[N];
int arr[40];
int pf[N+1];
int prime[10000005];
vector<int> adj[200010];
vector<int> vis(200010);
vector<ll>sqs;
vector<ll> V;
vector<int>primes;
int fact[N],infact[N];
vector< vector< ll > > C;
vector<ll> H;
 
struct cmp{
	bool operator()(pair<int,int> a,pair<int,int> b){
		if((a.second-a.first)>(b.second-b.first)){
			return 0;
		}
		else if((a.second-a.first)==(b.second-b.first)){
			if(a.first<b.first){
				return 0;
			}
			else{
				return 1;
			}
		}
		else{
			return 1;
		}
	}
};
 
 
 ll formulae(ll l, ll last){
    return (last * (last + 1)) / 2 - (l * (l - 1)) / 2;
}
 
 
void thrill(){    
     int n;
     cin>>n; 
     int cnt=1;
    int arr[n]; 
    for(int i = 0;i<n;i++){
        cin>>arr[i];
    }
    set<int>st;
    pbds v;
    pbds v2; 
    unordered_map<int,int>mp;
    v2.insert(arr[0]); 
    vector<int>vec;
    for(int i=1;i<n;i++){ 
        int k1 = v.order_of_key(arr[i]); 
        int res=0;
        int k2 = v2.order_of_key(arr[i]); 
        if(k2!=0 && k1==0){ 
            v.insert(arr[i]);
            cnt++; 
        } 
        v2.insert(arr[i]); 
    } 
    int answer = cnt - 1;
    cout<<answer<<endl;
}
    int main(){  
     int tc;
      cin>>tc;
   for(int i=0;i<tc;i++){
            thrill();
        }
        return 0;
    }
        
    
