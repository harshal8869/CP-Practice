#include <bits/stdc++.h>
using namespace std;
#define ll long long int
const int N = 1e6 + 2;
vector<int>graph[N];
pair<int,int>val[N];
void dfs(int vertex,int par){
        if(graph[vertex].size()==1 && vertex!=1){
            val[vertex]={1,0};
            
        }
        for(auto child:graph[vertex]){
            if(child==par) 
            continue;
            dfs(child,vertex);
    val[vertex].second=min(val[vertex].second,1+val[child].second);
            val[vertex].first+=val[child].first;
        }
}
void dfs2(int vertex,int par,int d,int &ans){
        if(d>=val[vertex].second){
            if(graph[vertex].size()>1 && vertex!=1)
                ans=max(ans,val[vertex].first);
        }
         for(auto child:graph[vertex]){
            if(child==par) 
            continue;
            dfs2(child,vertex,d+1,ans);
         }
}
void thrill(){
        int n;
        cin>>n;
        for(int i=1;i<n+1;i++){
            graph[i].clear();
            val[i].first=0;
            val[i].second=1e18;
        }
        for(int i=0;i<n-1;i++){
            int x,y;
            cin>>x>>y;
            graph[x].push_back(y);
            graph[y].push_back(x);
        }
        dfs(1,-1);
        int ans=0;
        dfs2(1,-1,0,ans);
        cout<<ans<<endl;
}
int main() {
	// your code goes here
	int tc;
	cin>>tc;
	for(int i=0;i<tc;i++){
	    thrill();
	}
	return 0;
}
