// Jai Shree Ram
//Jai Hanuman Ji
//Jai Mata Di
//Har Har Mahadev


 
 //  while(placement!=true && harshal!=1)
 // harshal=0;
  // koshish++;
  // if(placement==true)
  //  harshal=1;
  // else 
  // harshal=0;
  
   
   
#include <bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp>
#define ll long long int
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> node;
#define pi pair<ll,ll>
#define vpi vector<pi>
#define pll pair<ll, ll>
#define vp vector<pll>
#define all(x) (x).begin(), (x).end()
//#define _sorted(x) sort(all(x))
#define ff first
#define vll vector<ll>
#define ss second
#define vl vector<ll>
typedef vector<vl>vvl;
const int mod = 998244353;
const int maxi = 3e5 + 10;
const int MOD =1000000007;
//const int N = 2e6+10;
const int N=1000005;
using namespace __gnu_pbds; 
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; 
ll a[N],b[N],sum[N];
int tree[2 * N];
  
// ll a[N],b[N],f[N],v[N];
vector<int>g[N];
 const int NNN = 2e5 + 5;
const int N2 = 5e6 + 10;
ll inf = 1e9;
const ll mxN=1e6+1;
char s[N];
int arr[40];
int pf[N+1];
int prime[10000005];
vector<int> adj[200010];
vector<int> vis(200010);
vector<ll>sqs;
vector<ll> V;
vector<int>primes;
int fact[N],infact[N];
vector< vector< ll > > C;
vector<ll> H;
 
struct cmp{
	bool operator()(pair<int,int> a,pair<int,int> b){
		if((a.second-a.first)>(b.second-b.first)){
			return 0;
		}
		else if((a.second-a.first)==(b.second-b.first)){
			if(a.first<b.first){
				return 0;
			}
			else{
				return 1;
			}
		}
		else{
			return 1;
		}
	}
};
 
 
 


ll small_div(ll n){
    if(n % 2 == 0)
        return 2;
 
    for (ll i = 3;i * i<=n;i=i+2) {
        if (n % i == 0)
            return i;
    }
 
    return n;
}
void init(set<ll>&st){
	st.clear();
	st.insert(0);
}

    ll formulae(ll l, ll last){
    return (last * (last + 1)) / 2 - (l * (l - 1)) / 2;
}
//int dp[2][111][12321]; 
 int dp[5005][5005];
int maxiii(vector<int>&v, int size) {
    int maxi=0;
    sort(v.begin(),v.end());
    for(int i=0;i<size;i++){
        if(maxi == v[i]){
            maxi = maxi + 1;
        }
    }

    return maxi;
}

 ll mathpow(ll a,ll b){
     ll x = 1;
     while(b){
         if(b & 1)
             x = x * a;
             x = x % mod;
             a = a * a;
             a = a % mod;
             b >>=1;
         
     }
     return x;
 }


 
ll mod_inv(ll x) {
	return mathpow(x, mod - 2);
}       

ll mod_mult(ll a, ll b) {
    a = a % mod;
    b = b % mod;
    return (((a * b) % mod) + mod) % mod;
}

ll mod_sum(ll a, ll b) {
    a = a % mod;
    b = b % mod;
    return (((a + b) % mod) + mod) % mod;
}

ll mod_div(ll a,ll b) {
	return (a % mod * mod_inv(b)) % mod;
}

int isprime(int n){
   if(n<=1){
		return 0;
	}
	if(n==2){
		return 1;
	}
	if(n%2==0){
		return 0;
	}
	for(int i=3;i<=sqrt(n);i=i+2){
		if(n%i==0){
			return 0;
		}
	}
	return 1;
}
 

 ll solvec(ll a ,ll b ,ll c){
     if(a > b){
     return 0;
     }
     ll diff = (b - a)/c;
     if(a%c==0){
     diff++;
     }
     return diff;
 }
 double dhundo(int x,int y,int a,int b){ 
     
     
    double ans = sqrt((x-a)*(x-a) + (y-b)*(y-b)); 
    return ans; 
     
} 

ll mmi(ll A) {
    ll M = mod;
    ll m0 = M;
    ll y = 0;
    ll x = 1;
 
    if (M == 1) {
        return 0;
    }
 
    while (A > 1) {
        ll q = A / M;
    ll t = M;
        M = A % M;
        A = t;
        t = y;
        y = x - q * y;
        x = t;
    }
 
    if (x < 0) {
        x =x + m0;
    }
 
    return x;
}

void thrill(){
//      ll n, m;
//     cin>>n>>m;
//     string s;
//     cin>>s;
//     ll len = s.size();
//     ll ans = 1;
 
//     for(ll i=1;i<len;i++){
//         if(s[i] == '?'){
//             ans = (ans * i) % mod;
//         }
//     }
 
//     if (s[0] == '?'){
//         cout<<0<<endl;
//     }
//     else{
//       cout<<ans<<endl;
//     }
//  ll x;
//  string ss;
//     for (ll i=0;i<m;i++) {
//         cin>>x>>ss;
//         if(x == 1){
//             s = ss + s.substr(1);
            
//             if(s[0] == '?'){
//                 cout<<0<<endl;
//             } 
//           else{
//               cout<<ans<<endl;
//           }
//             continue;
//         }
 
//         if(s[x - 1] == '?' &&  ss!= "?"){
//             ans = (ans * mmi(x - 1));
//             ans = ans % mod;
//         } 
//         else if(s[x - 1]!= '?' && ss == "?"){
//             ans = (ans * (x - 1));
//             ans = ans % mod;
//         }
 
//         s = s.substr(0, x - 1) + ss + s.substr(x);
        
//         if(s[0] == '?'){
//             cout<<0<<endl;
//         }
//         else{
//             cout<<ans<<endl;
//         }
//     }
 
  ll n,m;
  cin>>n>>m;
   string s;
   cin>>s;
   ll len = s.size();
   ll ans=1; ll cnt=1;
   for(ll i=1;i<len;i++){
    if(s[i]=='?'){
        ans=mod_mult(ans,i);
    }
   }
   if(s[0]=='?'){
    cnt = 0;
   }
   ll answer = ans * cnt;
   cout<<answer<<endl;
   ll x;
   char ch;
   for(int i=0;i<m;i++){
    cin>>x>>ch;
    x--;
    if(s[x]=='?' && x!=0){
        ans=mod_div(ans,x);
    }
    if(ch=='?' && x!=0){
        ans=mod_mult(ans,x);
    }
    cnt=1;
    s[x]=ch;
    if(s[0]=='?'){
        cnt=0;
    }
    ll result = ans * cnt;
    cout<<result<<endl;
   }
 
}
int main(){  
       
  // int tc;
  // cin>>tc;
  // for(int i=0;i<tc;i++){
            thrill();
     //  }
        return 0;
    }
        
    
